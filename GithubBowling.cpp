// Bowling Game
// Please implement a program calculating the score of a single player in Bowling.

// Game Rules
// • A bowling game consists of 10 frames.
// • Each frame, the player has two tries to knock down 10 pins with a bowling ball.
// • The score for the frame is the total of knocked down pins, plus bonuses for strikes and spared.

// • A Spare is when a player knocks down all 10 pins in two tries.
    // o The bonus for this frame is the number of pins knocked down by the next roll.

// • A Strike is when the player knocks down all 10 pins on his first try.
    // o The bonus for this frame is the number of pins knocked down by the next two rolls.

// • In the 10th frame, a player is allowed to throw an extra ball if she/he scores a Spare or a Strike.
    // o No more than three throws are allowed for the 10th frame.
    // o No bonus scores are granted for Strikes and Spares in 10th frame.
    // o If a player hits a Strike / Spare, 10 pins will be available again for the next throw within the 10th frame.

// write an interactive code asking user to input the number of pins knocked down for each roll
// and print out the total score for the game.

// write c++ code below considering above requirements for frames, strikes, spares, and 10th frame.


#include "calculateScore_Github.cpp"

// write a simple interactive main function

int main() {
    BowlingGame game;
    string input;
    int pins;
    int frame = 1;
    int roll = 1;
    cout << "Welcome to Bowling!" << endl;
    cout << "Please enter the number of pins knocked down for each roll." << endl;
    cout << "Frame " << frame << ", Roll " << roll << ": ";
    while (getline(cin, input)) {
        istringstream iss(input);
        if (iss >> pins) {
            if (pins < 0 || pins > 10) {
                cout << "Invalid input. Please enter a number between 0 and 10." << endl;
                cout << "Frame " << frame << ", Roll " << roll << ": ";
                continue;
            }
            game.roll(pins);
            if (frame == 10) {
                if (roll == 1) {
                    if (pins == 10) {
                        cout << "Strike!" << endl;
                        roll++;
                    } else {
                        // cout << "Frame " << frame << ", Roll " << roll << ": ";
                        roll++;
                    }
                } else if (roll == 2) {
                    if (pins + game.rolls[game.currentRoll - 1] == 10) {
                        cout << "Spare!" << endl;
                    }
                    roll++;
                } else if (roll == 3) {
                    if (pins == 10) {
                        cout << "Strike!" << endl;
                    }
                    frame++; // this line was generated by copilot as roll++
                }
            } 
            else {
                if (pins == 10) {
                    cout << "Strike!" << endl;
                    frame++;
                    roll = 1;
                } else if (roll == 1) {
                    roll++;
                } else if (roll == 2) {
                    if (pins + game.rolls[game.currentRoll - 1] == 10) {
                        cout << "Spare!" << endl;
                    }
                    frame++;
                    roll = 1;
                }
            }
            if (frame == 11) {
                break;
            }
            cout << "Frame " << frame << ", Roll " << roll << ": ";
        } 
        // else {
        //     cout << "Invalid input. Please enter a number between 0 and 10." << endl;
        //     cout << "Frame " << frame << ", Roll " << roll << ": ";
        // }
    }
    cout << "Total score: " << game.score() << endl;
    return 0;
}

// write a document explaining your design and implementation of the program


// Design: 
// I used the BowlingGame class from the calculateScore_Github.cpp file. I added a few lines to the roll function to keep track of the current frame and roll. I also added a few lines to the score function to account for the 10th frame. I added a main function to run the game. I used a while loop to keep asking for input until the 10th frame is over. I used an istringstream to check if the input is a number. I used a few if statements to check if the input is valid. I used a few if statements to check if the input is a strike or spare. I used a few if statements to check if the game is over. I used a few cout statements to print out the frame and roll number. I used a cout statement to print out the total score. I used a break statement to exit the while loop when the game is over.

// Implementation:
// I used the BowlingGame class from the calculateScore_Github.cpp file. I added a few lines to the roll function to keep track of the current frame and roll. I also added a few lines to the score function to account for the 10th frame. I added a main function to run the game. I used a while loop to keep asking for input until the 10th frame is over. I used an istringstream to check if the input is a number. I used a few if statements to check if the input is valid. I used a few if statements to check if the input is a strike or spare. I used a few if statements to check if the game is over. I used a few cout statements to print out the frame and roll number. I used a cout statement to print out the total score. I used a break statement to exit the while loop when the game is over.

